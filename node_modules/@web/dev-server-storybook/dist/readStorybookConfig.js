"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.readStorybookConfig = void 0;
const path_1 = __importDefault(require("path"));
const fs_1 = __importDefault(require("fs"));
const utils_1 = require("./utils");
const defaultConfigDir = path_1.default.join(process.cwd(), '.storybook');
function validateMainJs(mainJs) {
    if (typeof mainJs !== 'object') {
        throw utils_1.createError('main.js must export an bject');
    }
    if (mainJs.stories == null) {
        throw utils_1.createError('Missing stories option in main.js');
    }
    if (!Array.isArray(mainJs.stories)) {
        throw utils_1.createError('Stories option main.js must be an array');
    }
    if (mainJs.addons != null && !Array.isArray(mainJs.addons)) {
        throw utils_1.createError('Addons in main.js must be an array');
    }
    return mainJs;
}
function readStorybookConfig(pluginConfig) {
    const configDir = pluginConfig.configDir
        ? path_1.default.resolve(pluginConfig.configDir)
        : defaultConfigDir;
    const mainJsPath = path_1.default.join(configDir, 'main.js');
    const previewJsPath = path_1.default.join(configDir, 'preview.js');
    if (!fs_1.default.existsSync(mainJsPath)) {
        throw utils_1.createError(`Could not find any storybook configuration at ${mainJsPath}. You can change the storybook config directory using the configDir option.`);
    }
    const mainJs = validateMainJs(require(mainJsPath));
    return { mainJs, mainJsPath, previewJsPath };
}
exports.readStorybookConfig = readStorybookConfig;
//# sourceMappingURL=readStorybookConfig.js.map