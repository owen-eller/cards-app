"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.storybookPlugin = void 0;
const utils_1 = require("./utils");
const createManagerHtml_1 = require("./html/createManagerHtml");
const createPreviewHtml_1 = require("./html/createPreviewHtml");
const findStories_1 = require("./findStories");
const readStorybookConfig_1 = require("./readStorybookConfig");
const types = ['preact', 'web-components'];
function storybookPlugin(pluginConfig) {
    if (typeof pluginConfig.type !== 'string') {
        throw utils_1.createError('Missing project type in config.');
    }
    if (!types.includes(pluginConfig.type)) {
        throw utils_1.createError(`Invalid project type ${pluginConfig.type}, supported types: ${types}`);
    }
    const { mainJs, mainJsPath, previewJsPath } = readStorybookConfig_1.readStorybookConfig(pluginConfig);
    let config;
    return {
        name: 'storybook',
        serverStart(args) {
            config = args.config;
        },
        async serve(context) {
            if (context.path === '/') {
                return { type: 'html', body: createManagerHtml_1.createManagerHtml(mainJs) };
            }
            if (context.path === '/iframe.html') {
                const storyImports = await findStories_1.findStories(config.rootDir, mainJsPath, mainJs.stories);
                return {
                    type: 'html',
                    body: createPreviewHtml_1.createPreviewHtml(config, pluginConfig, previewJsPath, storyImports),
                };
            }
        },
    };
}
exports.storybookPlugin = storybookPlugin;
//# sourceMappingURL=storybookPlugin.js.map